/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { MediumCreateNestedManyWithoutProjectsInput } from "./MediumCreateNestedManyWithoutProjectsInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { ProjectHasConstituencyCreateNestedManyWithoutProjectsInput } from "./ProjectHasConstituencyCreateNestedManyWithoutProjectsInput";
import { ProjectHasCountyCreateNestedManyWithoutProjectsInput } from "./ProjectHasCountyCreateNestedManyWithoutProjectsInput";
import { ProjectHasRegionCreateNestedManyWithoutProjectsInput } from "./ProjectHasRegionCreateNestedManyWithoutProjectsInput";
@InputType()
class ProjectCreateInput {
  @ApiProperty({
    required: false,
    type: () => MediumCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => MediumCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => MediumCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  mediums?: MediumCreateNestedManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: () => ProjectHasConstituencyCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => ProjectHasConstituencyCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => ProjectHasConstituencyCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  projectHasConstituencies?: ProjectHasConstituencyCreateNestedManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: () => ProjectHasCountyCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => ProjectHasCountyCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => ProjectHasCountyCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  projectHasCounties?: ProjectHasCountyCreateNestedManyWithoutProjectsInput;

  @ApiProperty({
    required: false,
    type: () => ProjectHasRegionCreateNestedManyWithoutProjectsInput,
  })
  @ValidateNested()
  @Type(() => ProjectHasRegionCreateNestedManyWithoutProjectsInput)
  @IsOptional()
  @Field(() => ProjectHasRegionCreateNestedManyWithoutProjectsInput, {
    nullable: true,
  })
  projectHasRegions?: ProjectHasRegionCreateNestedManyWithoutProjectsInput;
}
export { ProjectCreateInput };
